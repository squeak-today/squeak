// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/audio": {
            "get": {
                "description": "Check if the audio service is live",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audio"
                ],
                "summary": "Check audio service health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AudioHealthResponse"
                        }
                    }
                }
            }
        },
        "/audio/stt": {
            "post": {
                "description": "Convert speech audio to text",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audio"
                ],
                "summary": "Speech to text",
                "parameters": [
                    {
                        "description": "Speech to text request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SpeechToTextRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SpeechToTextResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/audio/translate": {
            "post": {
                "description": "Translate text from source language to target language",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audio"
                ],
                "summary": "Translate text",
                "parameters": [
                    {
                        "description": "Translation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TranslateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TranslateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/audio/tts": {
            "post": {
                "description": "Convert text to speech audio",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audio"
                ],
                "summary": "Text to speech",
                "parameters": [
                    {
                        "description": "Text to speech request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TextToSpeechRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TextToSpeechResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/news": {
            "get": {
                "description": "Get news content by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Get news content",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Content ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetNewsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/news/query": {
            "get": {
                "description": "Get news content by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Get news content",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Language",
                        "name": "language",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CEFR",
                        "name": "cefr",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Subject",
                        "name": "subject",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page size",
                        "name": "pagesize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.NewsItem"
                            }
                        }
                    }
                }
            }
        },
        "/organization": {
            "get": {
                "description": "Check Organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Check Organization",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OrganizationResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organization/plan": {
            "get": {
                "description": "Get Organization Plan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Get Organization Plan",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OrganizationPlanResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "description": "Get the user's profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetProfileResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profile/upsert": {
            "post": {
                "description": "Create or update the user's profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Upsert user profile",
                "parameters": [
                    {
                        "description": "Profile information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpsertProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpsertProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/progress": {
            "get": {
                "description": "Get the user's progress for today",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "progress"
                ],
                "summary": "Get today's progress",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TodayProgressResponse"
                        }
                    }
                }
            }
        },
        "/progress/increment": {
            "get": {
                "description": "Increment the number of questions completed for today",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "progress"
                ],
                "summary": "Increment questions completed",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Amount to increment by",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IncrementProgressResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/progress/streak": {
            "get": {
                "description": "Get the user's current streak and completion status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "progress"
                ],
                "summary": "Get streak information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StreakResponse"
                        }
                    }
                }
            }
        },
        "/qna": {
            "post": {
                "description": "Get an existing question or generate a new one for the given content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "qna"
                ],
                "summary": "Get or generate a question",
                "parameters": [
                    {
                        "description": "Question request parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GetQuestionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetQuestionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/qna/evaluate": {
            "post": {
                "description": "Evaluate a user's answer to a question",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "qna"
                ],
                "summary": "Evaluate an answer",
                "parameters": [
                    {
                        "description": "Answer evaluation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EvaluateAnswerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EvaluateAnswerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/story": {
            "get": {
                "description": "Get story content by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "story"
                ],
                "summary": "Get story page content",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Content ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetStoryPageResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/story/context": {
            "get": {
                "description": "Get story QNA context by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "story"
                ],
                "summary": "Get story QNA context",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Content ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetStoryQNAContextResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/story/query": {
            "get": {
                "description": "Get story query by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "story"
                ],
                "summary": "Get story query",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Language",
                        "name": "language",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CEFR",
                        "name": "cefr",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Subject",
                        "name": "subject",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page Size",
                        "name": "pagesize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.StoryItem"
                            }
                        }
                    }
                }
            }
        },
        "/student": {
            "get": {
                "description": "Check if the user is a student and get their classroom info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "Check user student status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StudentStatusResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/student/classroom": {
            "get": {
                "description": "Get classroom info for the student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "Get classroom info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetStudentClassroomResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/student/classroom/join": {
            "post": {
                "description": "Join a classroom as a student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "Join classroom",
                "parameters": [
                    {
                        "description": "Join classroom request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.JoinClassroomRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JoinClassroomResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/teacher": {
            "get": {
                "description": "Check if the user is a teacher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teacher"
                ],
                "summary": "Check user teacher status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TeacherStatusResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/teacher/classroom": {
            "get": {
                "description": "Get classroom info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teacher"
                ],
                "summary": "Get classroom info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetClassroomInfoResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/teacher/classroom/accept": {
            "post": {
                "description": "Accept content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teacher"
                ],
                "summary": "Accept content",
                "parameters": [
                    {
                        "description": "Accept content request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AcceptContentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AcceptContentResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/teacher/classroom/content": {
            "get": {
                "description": "Query classroom content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teacher"
                ],
                "summary": "Query classroom content",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Language",
                        "name": "language",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CEFR",
                        "name": "cefr",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Subject",
                        "name": "subject",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page size",
                        "name": "pagesize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Whitelist status",
                        "name": "whitelist",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Content type",
                        "name": "content_type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ClassroomContentItem"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/teacher/classroom/create": {
            "post": {
                "description": "Create classroom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teacher"
                ],
                "summary": "Create classroom",
                "parameters": [
                    {
                        "description": "Create classroom request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateClassroomRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateClassroomResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/teacher/classroom/reject": {
            "post": {
                "description": "Accept content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teacher"
                ],
                "summary": "Accept content",
                "parameters": [
                    {
                        "description": "Reject content request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RejectContentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RejectContentResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/webhook": {
            "post": {
                "description": "Validates and processes incoming webhook events from Stripe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stripe"
                ],
                "summary": "Process Stripe webhook",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WebhookResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AcceptContentRequest": {
            "type": "object",
            "required": [
                "content_type"
            ],
            "properties": {
                "content_id": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 123
                },
                "content_type": {
                    "type": "string",
                    "example": "News"
                }
            }
        },
        "models.AcceptContentResponse": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Content accepted successfully"
                }
            }
        },
        "models.AudioHealthResponse": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "example": "live"
                }
            }
        },
        "models.ClassroomContentItem": {
            "type": "object",
            "required": [
                "cefr_level",
                "content_type",
                "created_at",
                "date_created",
                "id",
                "language",
                "pages",
                "preview_text",
                "title",
                "topic"
            ],
            "properties": {
                "cefr_level": {
                    "type": "string",
                    "example": "B1"
                },
                "content_type": {
                    "type": "string",
                    "example": "News"
                },
                "created_at": {
                    "type": "string",
                    "example": "2025-02-26T13:01:13.390612Z"
                },
                "date_created": {
                    "type": "string",
                    "example": "2025-02-26"
                },
                "id": {
                    "type": "string",
                    "example": "2479"
                },
                "language": {
                    "type": "string",
                    "example": "French"
                },
                "pages": {
                    "type": "integer",
                    "example": 10
                },
                "preview_text": {
                    "type": "string",
                    "example": "# L'actualité musicale en bref\n\n## Un flot de nouveautés..."
                },
                "title": {
                    "type": "string",
                    "example": "# L'actualité musicale en bref\n\n## Un fl..."
                },
                "topic": {
                    "type": "string",
                    "example": "Music"
                }
            }
        },
        "models.CreateClassroomRequest": {
            "type": "object",
            "properties": {
                "students_count": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 10
                }
            }
        },
        "models.CreateClassroomResponse": {
            "type": "object",
            "required": [
                "classroom_id"
            ],
            "properties": {
                "classroom_id": {
                    "type": "string",
                    "example": "123"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "required": [
                "error"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "PROFILE_NOT_FOUND"
                },
                "error": {
                    "type": "string",
                    "example": "Something went wrong"
                }
            }
        },
        "models.EvaluateAnswerRequest": {
            "type": "object",
            "required": [
                "answer",
                "cefr",
                "content",
                "question"
            ],
            "properties": {
                "answer": {
                    "type": "string",
                    "example": "Hello"
                },
                "cefr": {
                    "type": "string",
                    "example": "B1"
                },
                "content": {
                    "type": "string",
                    "example": "Bonjour, comment ça va?"
                },
                "question": {
                    "type": "string",
                    "example": "What does 'bonjour' mean?"
                }
            }
        },
        "models.EvaluateAnswerResponse": {
            "type": "object",
            "required": [
                "evaluation",
                "explanation"
            ],
            "properties": {
                "evaluation": {
                    "type": "string",
                    "example": "PASS"
                },
                "explanation": {
                    "type": "string",
                    "example": "Perfect!"
                }
            }
        },
        "models.GetClassroomInfoResponse": {
            "type": "object",
            "required": [
                "classroom_id"
            ],
            "properties": {
                "classroom_id": {
                    "type": "string",
                    "example": "123"
                },
                "students_count": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 10
                }
            }
        },
        "models.GetNewsResponse": {
            "type": "object",
            "required": [
                "cefr_level",
                "content",
                "content_type",
                "date_created",
                "dictionary",
                "language",
                "preview_text",
                "sources",
                "title",
                "topic"
            ],
            "properties": {
                "cefr_level": {
                    "type": "string",
                    "example": "B1"
                },
                "content": {
                    "type": "string",
                    "example": "Le contenu complet de l'article..."
                },
                "content_type": {
                    "type": "string",
                    "example": "News"
                },
                "date_created": {
                    "type": "string",
                    "example": "2024-02-26"
                },
                "dictionary": {
                    "$ref": "#/definitions/storage.Dictionary"
                },
                "language": {
                    "type": "string",
                    "example": "French"
                },
                "preview_text": {
                    "type": "string",
                    "example": "Un résumé des nouvelles musicales..."
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.Source"
                    }
                },
                "title": {
                    "type": "string",
                    "example": "L'actualité musicale en bref"
                },
                "topic": {
                    "type": "string",
                    "example": "Music"
                }
            }
        },
        "models.GetProfileResponse": {
            "type": "object",
            "required": [
                "interested_topics",
                "learning_language",
                "skill_level",
                "username"
            ],
            "properties": {
                "daily_questions_goal": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 3
                },
                "interested_topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"NBA\"]"
                    ]
                },
                "learning_language": {
                    "type": "string",
                    "example": "French"
                },
                "skill_level": {
                    "type": "string",
                    "example": "B1"
                },
                "username": {
                    "type": "string",
                    "example": "connortbot"
                }
            }
        },
        "models.GetQuestionRequest": {
            "type": "object",
            "required": [
                "cefr_level",
                "content_type",
                "id",
                "question_type"
            ],
            "properties": {
                "cefr_level": {
                    "type": "string",
                    "example": "B1"
                },
                "content_type": {
                    "type": "string",
                    "example": "News"
                },
                "id": {
                    "type": "string",
                    "example": "123"
                },
                "question_type": {
                    "type": "string",
                    "enum": [
                        "vocab",
                        "understanding"
                    ],
                    "example": "vocab"
                }
            }
        },
        "models.GetQuestionResponse": {
            "type": "object",
            "required": [
                "question"
            ],
            "properties": {
                "question": {
                    "type": "string",
                    "example": "What does 'bonjour' mean?"
                }
            }
        },
        "models.GetStoryPageResponse": {
            "type": "object",
            "required": [
                "cefr_level",
                "content",
                "content_type",
                "date_created",
                "language",
                "pages",
                "preview_text",
                "title",
                "topic"
            ],
            "properties": {
                "cefr_level": {
                    "type": "string",
                    "example": "B1"
                },
                "content": {
                    "type": "string",
                    "example": "Le contenu complet de l'article..."
                },
                "content_type": {
                    "type": "string",
                    "example": "Story"
                },
                "date_created": {
                    "type": "string",
                    "example": "2024-02-26"
                },
                "language": {
                    "type": "string",
                    "example": "French"
                },
                "pages": {
                    "type": "integer",
                    "example": 10
                },
                "preview_text": {
                    "type": "string",
                    "example": "Un résumé des nouvelles musicales..."
                },
                "title": {
                    "type": "string",
                    "example": "L'actualité musicale en bref"
                },
                "topic": {
                    "type": "string",
                    "example": "Music"
                }
            }
        },
        "models.GetStoryQNAContextResponse": {
            "type": "object",
            "required": [
                "context"
            ],
            "properties": {
                "context": {
                    "type": "string",
                    "example": "Le contexte de l'histoire..."
                }
            }
        },
        "models.GetStudentClassroomResponse": {
            "type": "object",
            "required": [
                "teacher_id"
            ],
            "properties": {
                "students_count": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 10
                },
                "teacher_id": {
                    "type": "string",
                    "example": "789"
                }
            }
        },
        "models.IncrementProgressResponse": {
            "type": "object",
            "required": [
                "date",
                "goal_met",
                "user_id"
            ],
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2025-02-26T00:00:00Z"
                },
                "goal_met": {
                    "type": "boolean",
                    "example": true
                },
                "questions_completed": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 5
                },
                "user_id": {
                    "type": "string",
                    "example": "123"
                }
            }
        },
        "models.JoinClassroomRequest": {
            "type": "object",
            "required": [
                "classroom_id"
            ],
            "properties": {
                "classroom_id": {
                    "type": "string",
                    "example": "123"
                }
            }
        },
        "models.JoinClassroomResponse": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Student added to classroom successfully"
                }
            }
        },
        "models.NewsItem": {
            "type": "object",
            "required": [
                "cefr_level",
                "created_at",
                "date_created",
                "id",
                "language",
                "preview_text",
                "title",
                "topic"
            ],
            "properties": {
                "cefr_level": {
                    "type": "string",
                    "example": "B1"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-02-26T13:01:13.390612Z"
                },
                "date_created": {
                    "type": "string",
                    "example": "2024-02-26"
                },
                "id": {
                    "type": "string",
                    "example": "123"
                },
                "language": {
                    "type": "string",
                    "example": "French"
                },
                "preview_text": {
                    "type": "string",
                    "example": "Un résumé des nouvelles musicales..."
                },
                "title": {
                    "type": "string",
                    "example": "L'actualité musicale en bref"
                },
                "topic": {
                    "type": "string",
                    "example": "Music"
                }
            }
        },
        "models.OrganizationPlanResponse": {
            "type": "object",
            "required": [
                "plan"
            ],
            "properties": {
                "plan": {
                    "type": "string",
                    "example": "FREE"
                }
            }
        },
        "models.OrganizationResponse": {
            "type": "object",
            "required": [
                "organization_id",
                "teacher_id"
            ],
            "properties": {
                "organization_id": {
                    "type": "string",
                    "example": "123"
                },
                "teacher_id": {
                    "type": "string",
                    "example": "123"
                }
            }
        },
        "models.RejectContentRequest": {
            "type": "object",
            "required": [
                "content_type"
            ],
            "properties": {
                "content_id": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 123
                },
                "content_type": {
                    "type": "string",
                    "example": "News"
                }
            }
        },
        "models.RejectContentResponse": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Content rejected successfully"
                }
            }
        },
        "models.SpeechToTextRequest": {
            "type": "object",
            "required": [
                "audio_content",
                "language_code"
            ],
            "properties": {
                "audio_content": {
                    "type": "string",
                    "example": "base64-encoded-audio-content"
                },
                "language_code": {
                    "type": "string",
                    "example": "en-US"
                }
            }
        },
        "models.SpeechToTextResponse": {
            "type": "object",
            "required": [
                "transcript"
            ],
            "properties": {
                "transcript": {
                    "type": "string",
                    "example": "Hello, how are you?"
                }
            }
        },
        "models.StoryItem": {
            "type": "object",
            "required": [
                "cefr_level",
                "created_at",
                "date_created",
                "id",
                "language",
                "preview_text",
                "title",
                "topic"
            ],
            "properties": {
                "cefr_level": {
                    "type": "string",
                    "example": "B1"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-02-26T13:01:13.390612Z"
                },
                "date_created": {
                    "type": "string",
                    "example": "2024-02-26"
                },
                "id": {
                    "type": "string",
                    "example": "123"
                },
                "language": {
                    "type": "string",
                    "example": "French"
                },
                "preview_text": {
                    "type": "string",
                    "example": "Un résumé des nouvelles musicales..."
                },
                "title": {
                    "type": "string",
                    "example": "L'actualité musicale en bref"
                },
                "topic": {
                    "type": "string",
                    "example": "Music"
                }
            }
        },
        "models.StreakResponse": {
            "type": "object",
            "required": [
                "completed_today"
            ],
            "properties": {
                "completed_today": {
                    "type": "boolean",
                    "example": true
                },
                "streak": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 7
                }
            }
        },
        "models.StudentStatusResponse": {
            "type": "object",
            "required": [
                "classroom_id",
                "student_id"
            ],
            "properties": {
                "classroom_id": {
                    "type": "string",
                    "example": "456"
                },
                "student_id": {
                    "type": "string",
                    "example": "123"
                }
            }
        },
        "models.TeacherStatusResponse": {
            "type": "object",
            "required": [
                "exists"
            ],
            "properties": {
                "exists": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.TextToSpeechRequest": {
            "type": "object",
            "required": [
                "language_code",
                "text",
                "voice_name"
            ],
            "properties": {
                "language_code": {
                    "type": "string",
                    "example": "en-US"
                },
                "text": {
                    "type": "string",
                    "example": "Hello, how are you?"
                },
                "voice_name": {
                    "type": "string",
                    "example": "en-US-Standard-A"
                }
            }
        },
        "models.TextToSpeechResponse": {
            "type": "object",
            "required": [
                "audio_content"
            ],
            "properties": {
                "audio_content": {
                    "type": "string",
                    "example": "base64-encoded-audio-content"
                }
            }
        },
        "models.TodayProgressResponse": {
            "type": "object",
            "required": [
                "date",
                "goal_met",
                "user_id"
            ],
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2025-02-26T00:00:00Z"
                },
                "goal_met": {
                    "type": "boolean",
                    "example": true
                },
                "questions_completed": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 5
                },
                "user_id": {
                    "type": "string",
                    "example": "123"
                }
            }
        },
        "models.TranslateRequest": {
            "type": "object",
            "required": [
                "sentence",
                "source",
                "target"
            ],
            "properties": {
                "sentence": {
                    "type": "string",
                    "example": "Hello, how are you?"
                },
                "source": {
                    "type": "string",
                    "example": "en"
                },
                "target": {
                    "type": "string",
                    "example": "fr"
                }
            }
        },
        "models.TranslateResponse": {
            "type": "object",
            "properties": {
                "sentence": {
                    "type": "string",
                    "example": "Bonjour, comment allez-vous?"
                }
            }
        },
        "models.UpsertProfileRequest": {
            "type": "object",
            "required": [
                "interested_topics",
                "learning_language",
                "skill_level",
                "username"
            ],
            "properties": {
                "daily_questions_goal": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 3
                },
                "interested_topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"NBA\"]"
                    ]
                },
                "learning_language": {
                    "type": "string",
                    "example": "French"
                },
                "skill_level": {
                    "type": "string",
                    "example": "B1"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "models.UpsertProfileResponse": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 123
                },
                "message": {
                    "type": "string",
                    "example": "Profile updated successfully"
                }
            }
        },
        "models.WebhookResponse": {
            "type": "object",
            "properties": {
                "received": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "storage.Dictionary": {
            "type": "object",
            "properties": {
                "translations": {
                    "type": "object",
                    "properties": {
                        "sentences": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "words": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "storage.Source": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "JWT Authorization header using Bearer",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "api.squeak.today",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Squeak API",
	Description:      "Backend API for Squeak Platform",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
