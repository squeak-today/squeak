basePath: /
definitions:
  models.AcceptContentRequest:
    properties:
      classroom_id:
        example: "123"
        type: string
      content_id:
        example: 123
        minimum: 0
        type: integer
      content_type:
        example: News
        type: string
    required:
    - classroom_id
    - content_type
    type: object
  models.AcceptContentResponse:
    properties:
      message:
        example: Content accepted successfully
        type: string
    required:
    - message
    type: object
  models.AudioHealthResponse:
    properties:
      status:
        example: live
        type: string
    required:
    - status
    type: object
  models.AudiobookResponse:
    properties:
      audiobook:
        $ref: '#/definitions/storage.Audiobook'
    type: object
  models.BillingAccountResponse:
    properties:
      canceled:
        example: false
        type: boolean
      expiration:
        example: "2025-01-01T00:00:00Z"
        type: string
      plan:
        example: PRO
        type: string
    required:
    - canceled
    - expiration
    - plan
    type: object
  models.BillingAccountUsageResponse:
    properties:
      max_natural_tts_usage:
        example: 100
        type: integer
      max_premium_stt_usage:
        example: 100
        type: integer
      natural_tts_usage:
        example: 10
        type: integer
      premium_stt_usage:
        example: 10
        type: integer
    required:
    - max_natural_tts_usage
    - max_premium_stt_usage
    - natural_tts_usage
    - premium_stt_usage
    type: object
  models.CancelIndividualSubscriptionRequest:
    type: object
  models.CancelIndividualSubscriptionResponse:
    properties:
      canceled_plan:
        example: PREMIUM
        type: string
      current_expiration:
        example: "2025-03-24T12:00:00Z"
        type: string
      success:
        example: true
        type: boolean
    required:
    - canceled_plan
    - current_expiration
    - success
    type: object
  models.CancelSubscriptionRequest:
    type: object
  models.CancelSubscriptionResponse:
    properties:
      canceled_plan:
        example: CLASSROOM
        type: string
      current_expiration:
        example: "2025-03-24T12:00:00Z"
        type: string
      success:
        example: true
        type: boolean
    required:
    - canceled_plan
    - current_expiration
    - success
    type: object
  models.ClassroomContentItem:
    properties:
      cefr_level:
        example: B1
        type: string
      content_type:
        example: News
        type: string
      created_at:
        example: "2025-02-26T13:01:13.390612Z"
        type: string
      date_created:
        example: "2025-02-26"
        type: string
      id:
        example: "2479"
        type: string
      language:
        example: French
        type: string
      pages:
        example: 10
        type: integer
      preview_text:
        example: |-
          # L'actualité musicale en bref

          ## Un flot de nouveautés...
        type: string
      title:
        example: |-
          # L'actualité musicale en bref

          ## Un fl...
        type: string
      topic:
        example: Music
        type: string
    required:
    - cefr_level
    - content_type
    - created_at
    - date_created
    - id
    - language
    - pages
    - preview_text
    - title
    - topic
    type: object
  models.ClassroomListItem:
    properties:
      classroom_id:
        example: "123"
        type: string
      name:
        example: Connor
        type: string
      students_count:
        example: 10
        minimum: 0
        type: integer
    required:
    - classroom_id
    - name
    type: object
  models.CreateCheckoutSessionRequest:
    type: object
  models.CreateCheckoutSessionResponse:
    properties:
      redirect_url:
        example: https://checkout.stripe.com/c/pay/123
        type: string
    required:
    - redirect_url
    type: object
  models.CreateClassroomRequest:
    properties:
      name:
        example: Tuesday 9am
        type: string
      students_count:
        example: 10
        minimum: 0
        type: integer
    required:
    - name
    type: object
  models.CreateClassroomResponse:
    properties:
      classroom_id:
        example: "123"
        type: string
    required:
    - classroom_id
    type: object
  models.CreateIndividualCheckoutSessionRequest:
    type: object
  models.CreateIndividualCheckoutSessionResponse:
    properties:
      redirect_url:
        example: https://checkout.stripe.com/c/pay/123
        type: string
    required:
    - redirect_url
    type: object
  models.CreateOrganizationRequest:
    type: object
  models.CreateOrganizationResponse:
    properties:
      organization_id:
        example: "123"
        type: string
      teacher_id:
        example: "123"
        type: string
    required:
    - organization_id
    - teacher_id
    type: object
  models.DeleteClassroomRequest:
    properties:
      classroom_id:
        example: "123"
        type: string
    required:
    - classroom_id
    type: object
  models.DeleteClassroomResponse:
    properties:
      message:
        example: Classroom deleted successfully
        type: string
    required:
    - message
    type: object
  models.ERROR_CODE:
    enum:
    - PROFILE_NOT_FOUND
    - NO_TRANSCRIPT
    - AUTH_REQUIRED
    - USAGE_LIMIT_REACHED
    type: string
    x-enum-varnames:
    - PROFILE_NOT_FOUND
    - NO_TRANSCRIPT
    - AUTH_REQUIRED
    - USAGE_LIMIT_REACHED
  models.ErrorResponse:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/models.ERROR_CODE'
        enum:
        - PROFILE_NOT_FOUND
        - NO_TRANSCRIPT
        - AUTH_REQUIRED
        - USAGE_LIMIT_REACHED
        example: PROFILE_NOT_FOUND
      error:
        example: Something went wrong
        type: string
    required:
    - error
    type: object
  models.EvaluateAnswerRequest:
    properties:
      answer:
        example: Hello
        type: string
      cefr:
        example: B1
        type: string
      content:
        example: Bonjour, comment ça va?
        type: string
      question:
        example: What does 'bonjour' mean?
        type: string
    required:
    - answer
    - cefr
    - content
    - question
    type: object
  models.EvaluateAnswerResponse:
    properties:
      evaluation:
        example: PASS
        type: string
      explanation:
        example: Perfect!
        type: string
    required:
    - evaluation
    - explanation
    type: object
  models.GetClassroomListResponse:
    properties:
      classrooms:
        items:
          $ref: '#/definitions/models.ClassroomListItem'
        type: array
    required:
    - classrooms
    type: object
  models.GetNewsResponse:
    properties:
      cefr_level:
        example: B1
        type: string
      content:
        example: Le contenu complet de l'article...
        type: string
      content_type:
        example: News
        type: string
      date_created:
        example: "2024-02-26"
        type: string
      dictionary:
        $ref: '#/definitions/storage.Dictionary'
      language:
        example: French
        type: string
      preview_text:
        example: Un résumé des nouvelles musicales...
        type: string
      sources:
        items:
          $ref: '#/definitions/storage.Source'
        type: array
      title:
        example: L'actualité musicale en bref
        type: string
      topic:
        example: Music
        type: string
    required:
    - cefr_level
    - content
    - content_type
    - date_created
    - dictionary
    - language
    - preview_text
    - sources
    - title
    - topic
    type: object
  models.GetProfileResponse:
    properties:
      daily_questions_goal:
        example: 3
        minimum: 0
        type: integer
      interested_topics:
        example:
        - '["NBA"]'
        items:
          type: string
        type: array
      learning_language:
        example: French
        type: string
      skill_level:
        example: B1
        type: string
      username:
        example: connortbot
        type: string
    required:
    - interested_topics
    - learning_language
    - skill_level
    - username
    type: object
  models.GetQuestionRequest:
    properties:
      cefr_level:
        example: B1
        type: string
      content_type:
        example: News
        type: string
      id:
        example: "123"
        type: string
      question_type:
        enum:
        - vocab
        - understanding
        example: vocab
        type: string
    required:
    - cefr_level
    - content_type
    - id
    - question_type
    type: object
  models.GetQuestionResponse:
    properties:
      question:
        example: What does 'bonjour' mean?
        type: string
    required:
    - question
    type: object
  models.GetStoryPageResponse:
    properties:
      cefr_level:
        example: B1
        type: string
      content:
        example: Le contenu complet de l'article...
        type: string
      content_type:
        example: Story
        type: string
      date_created:
        example: "2024-02-26"
        type: string
      language:
        example: French
        type: string
      pages:
        example: 10
        type: integer
      preview_text:
        example: Un résumé des nouvelles musicales...
        type: string
      title:
        example: L'actualité musicale en bref
        type: string
      topic:
        example: Music
        type: string
    required:
    - cefr_level
    - content
    - content_type
    - date_created
    - language
    - pages
    - preview_text
    - title
    - topic
    type: object
  models.GetStoryQNAContextResponse:
    properties:
      context:
        example: Le contexte de l'histoire...
        type: string
    required:
    - context
    type: object
  models.GetStudentClassroomResponse:
    properties:
      students_count:
        example: 10
        minimum: 0
        type: integer
      teacher_id:
        example: "789"
        type: string
    required:
    - teacher_id
    type: object
  models.IncrementProgressResponse:
    properties:
      date:
        example: "2025-02-26T00:00:00Z"
        type: string
      goal_met:
        example: true
        type: boolean
      questions_completed:
        example: 5
        minimum: 0
        type: integer
      user_id:
        example: "123"
        type: string
    required:
    - date
    - goal_met
    - user_id
    type: object
  models.JoinClassroomRequest:
    properties:
      classroom_id:
        example: "123"
        type: string
    required:
    - classroom_id
    type: object
  models.JoinClassroomResponse:
    properties:
      message:
        example: Student added to classroom successfully
        type: string
    required:
    - message
    type: object
  models.JoinOrganizationRequest:
    properties:
      organization_id:
        example: "123"
        type: string
    required:
    - organization_id
    type: object
  models.JoinOrganizationResponse:
    properties:
      teacher_id:
        example: "123"
        type: string
    required:
    - teacher_id
    type: object
  models.NewsItem:
    properties:
      cefr_level:
        example: B1
        type: string
      created_at:
        example: "2024-02-26T13:01:13.390612Z"
        type: string
      date_created:
        example: "2024-02-26"
        type: string
      id:
        example: "123"
        type: string
      language:
        example: French
        type: string
      preview_text:
        example: Un résumé des nouvelles musicales...
        type: string
      title:
        example: L'actualité musicale en bref
        type: string
      topic:
        example: Music
        type: string
    required:
    - cefr_level
    - created_at
    - date_created
    - id
    - language
    - preview_text
    - title
    - topic
    type: object
  models.OrganizationResponse:
    properties:
      canceled:
        example: false
        type: boolean
      expiration_date:
        example: "2025-03-24T12:00:00Z"
        type: string
      organization_id:
        example: "123"
        type: string
      plan:
        example: FREE
        type: string
      teacher_id:
        example: "123"
        type: string
    required:
    - organization_id
    - plan
    - teacher_id
    type: object
  models.PaymentsResponse:
    properties:
      success:
        example: true
        type: boolean
    required:
    - success
    type: object
  models.RejectContentRequest:
    properties:
      classroom_id:
        example: "123"
        type: string
      content_id:
        example: 123
        minimum: 0
        type: integer
      content_type:
        example: News
        type: string
    required:
    - classroom_id
    - content_type
    type: object
  models.RejectContentResponse:
    properties:
      message:
        example: Content rejected successfully
        type: string
    required:
    - message
    type: object
  models.SpeechToTextRequest:
    properties:
      audio_content:
        example: base64-encoded-audio-content
        type: string
      language_code:
        example: en-US
        type: string
      premium:
        example: false
        type: boolean
    required:
    - audio_content
    - language_code
    type: object
  models.SpeechToTextResponse:
    properties:
      transcript:
        example: Hello, how are you?
        type: string
    required:
    - transcript
    type: object
  models.StoryItem:
    properties:
      cefr_level:
        example: B1
        type: string
      created_at:
        example: "2024-02-26T13:01:13.390612Z"
        type: string
      date_created:
        example: "2024-02-26"
        type: string
      id:
        example: "123"
        type: string
      language:
        example: French
        type: string
      preview_text:
        example: Un résumé des nouvelles musicales...
        type: string
      title:
        example: L'actualité musicale en bref
        type: string
      topic:
        example: Music
        type: string
    required:
    - cefr_level
    - created_at
    - date_created
    - id
    - language
    - preview_text
    - title
    - topic
    type: object
  models.StreakResponse:
    properties:
      completed_today:
        example: true
        type: boolean
      streak:
        example: 7
        minimum: 0
        type: integer
    required:
    - completed_today
    type: object
  models.StudentStatusResponse:
    properties:
      classroom_id:
        example: "456"
        type: string
      plan:
        example: FREE
        type: string
      student_id:
        example: "123"
        type: string
    required:
    - classroom_id
    - student_id
    type: object
  models.TeacherStatusResponse:
    properties:
      exists:
        example: true
        type: boolean
      plan:
        example: FREE
        type: string
    required:
    - exists
    type: object
  models.TextToSpeechRequest:
    properties:
      language_code:
        example: en-US
        type: string
      natural:
        example: false
        type: boolean
      text:
        example: Hello, how are you?
        type: string
      voice_name:
        example: en-US-Standard-A
        type: string
    required:
    - language_code
    - text
    - voice_name
    type: object
  models.TextToSpeechResponse:
    properties:
      audio_content:
        example: base64-encoded-audio-content
        type: string
    required:
    - audio_content
    type: object
  models.TodayProgressResponse:
    properties:
      date:
        example: "2025-02-26T00:00:00Z"
        type: string
      goal_met:
        example: true
        type: boolean
      questions_completed:
        example: 5
        minimum: 0
        type: integer
      user_id:
        example: "123"
        type: string
    required:
    - date
    - goal_met
    - user_id
    type: object
  models.TranslateRequest:
    properties:
      sentence:
        example: Hello, how are you?
        type: string
      source:
        example: en
        type: string
      target:
        example: fr
        type: string
    required:
    - sentence
    - source
    - target
    type: object
  models.TranslateResponse:
    properties:
      sentence:
        example: Bonjour, comment allez-vous?
        type: string
    type: object
  models.UpdateClassroomRequest:
    properties:
      classroom_id:
        example: "123"
        type: string
      name:
        example: Tuesday 9am
        type: string
    required:
    - classroom_id
    - name
    type: object
  models.UpdateClassroomResponse:
    properties:
      message:
        example: Classroom updated successfully
        type: string
    required:
    - message
    type: object
  models.UpsertProfileRequest:
    properties:
      daily_questions_goal:
        example: 3
        minimum: 0
        type: integer
      interested_topics:
        example:
        - '["NBA"]'
        items:
          type: string
        type: array
      learning_language:
        example: French
        type: string
      skill_level:
        example: B1
        type: string
      username:
        example: johndoe
        type: string
    required:
    - interested_topics
    - learning_language
    - skill_level
    - username
    type: object
  models.UpsertProfileResponse:
    properties:
      id:
        example: 123
        minimum: 0
        type: integer
      message:
        example: Profile updated successfully
        type: string
    required:
    - message
    type: object
  models.WebhookResponse:
    properties:
      received:
        type: boolean
      type:
        type: string
    type: object
  storage.AlignmentInfo:
    properties:
      character_end_times_seconds:
        items:
          type: number
        type: array
      character_start_times_seconds:
        items:
          type: number
        type: array
      characters:
        items:
          type: string
        type: array
    type: object
  storage.Audiobook:
    properties:
      alignment:
        $ref: '#/definitions/storage.AlignmentInfo'
      audio_base64:
        type: string
      normalized_alignment:
        $ref: '#/definitions/storage.AlignmentInfo'
      text:
        type: string
    type: object
  storage.Dictionary:
    properties:
      translations:
        properties:
          sentences:
            additionalProperties:
              type: string
            type: object
          words:
            additionalProperties:
              type: string
            type: object
        type: object
    type: object
  storage.Source:
    properties:
      content:
        type: string
      score:
        type: number
      title:
        type: string
      url:
        type: string
    type: object
host: api.squeak.today
info:
  contact: {}
  description: Backend API for Squeak Platform
  title: Squeak API
  version: "1.0"
paths:
  /audio:
    get:
      consumes:
      - application/json
      description: Check if the audio service is live
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AudioHealthResponse'
      summary: Check audio service health
      tags:
      - audio
  /audio/audiobook:
    get:
      consumes:
      - application/json
      description: Get audiobook for a news_id
      parameters:
      - description: News ID
        in: query
        name: news_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AudiobookResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get audiobook
      tags:
      - audio
  /audio/stt:
    post:
      consumes:
      - application/json
      description: Convert speech audio to text
      parameters:
      - description: Speech to text request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SpeechToTextRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SpeechToTextResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Speech to text
      tags:
      - audio
  /audio/translate:
    post:
      consumes:
      - application/json
      description: Translate text from source language to target language
      parameters:
      - description: Translation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.TranslateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TranslateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Translate text
      tags:
      - audio
  /audio/tts:
    post:
      consumes:
      - application/json
      description: Convert text to speech audio
      parameters:
      - description: Text to speech request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.TextToSpeechRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TextToSpeechResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Text to speech
      tags:
      - audio
  /billing:
    get:
      consumes:
      - application/json
      description: Check Billing Account
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BillingAccountResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Check Billing Account
      tags:
      - billing
  /billing/cancel-subscription-eop:
    post:
      consumes:
      - application/json
      description: Cancel a Stripe individual subscription at the end of the period
      parameters:
      - description: Cancel subscription request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CancelIndividualSubscriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CancelIndividualSubscriptionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Cancel a Stripe individual subscription at the end of the period
      tags:
      - billing
  /billing/create-checkout-session:
    post:
      consumes:
      - application/json
      description: Creates a checkout session and redirects to Stripe's payment page
      parameters:
      - description: Create checkout session request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateIndividualCheckoutSessionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Redirect to Stripe Checkout
          schema:
            $ref: '#/definitions/models.CreateIndividualCheckoutSessionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a Stripe checkout session (individual)
      tags:
      - billing
  /billing/usage:
    get:
      consumes:
      - application/json
      description: Get Billing Account Usage, assumes free plan
      parameters:
      - description: Plan
        in: query
        name: plan
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BillingAccountUsageResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get Billing Account Usage
      tags:
      - billing
  /news:
    get:
      consumes:
      - application/json
      description: Get news content by ID
      parameters:
      - description: Content ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetNewsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get news content
      tags:
      - news
  /news/query:
    get:
      consumes:
      - application/json
      description: Get news content by ID
      parameters:
      - description: Language
        in: query
        name: language
        required: true
        type: string
      - description: CEFR
        in: query
        name: cefr
        required: true
        type: string
      - description: Subject
        in: query
        name: subject
        required: true
        type: string
      - description: Page
        in: query
        name: page
        required: true
        type: string
      - description: Page size
        in: query
        name: pagesize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.NewsItem'
            type: array
      summary: Get news content
      tags:
      - news
  /organization:
    get:
      consumes:
      - application/json
      description: Check Organization for Teacher
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrganizationResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Check Organization for Teacher
      tags:
      - organization
  /organization/create:
    post:
      consumes:
      - application/json
      description: Create Organization. Automatically adds the calling user as a teacher.
      parameters:
      - description: Create organization request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrganizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateOrganizationResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create Organization
      tags:
      - organization
  /organization/join:
    post:
      consumes:
      - application/json
      description: Join Organization that has been created by another admin.
      parameters:
      - description: Join organization request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.JoinOrganizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JoinOrganizationResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Join Organization
      tags:
      - organization
  /organization/payments:
    get:
      consumes:
      - application/json
      description: Ping Payments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PaymentsResponse'
      summary: Ping Payments
      tags:
      - organization
  /organization/payments/cancel-subscription-eop:
    post:
      consumes:
      - application/json
      description: Cancel a Stripe subscription at the end of the period
      parameters:
      - description: Cancel subscription request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CancelSubscriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CancelSubscriptionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Cancel a Stripe subscription at the end of the period
      tags:
      - organization
  /organization/payments/create-checkout-session:
    post:
      consumes:
      - application/json
      description: Creates a checkout session and redirects to Stripe's payment page
      parameters:
      - description: Create checkout session request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateCheckoutSessionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Redirect to Stripe Checkout
          schema:
            $ref: '#/definitions/models.CreateCheckoutSessionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a Stripe checkout session
      tags:
      - organization
  /profile:
    get:
      consumes:
      - application/json
      description: Get the user's profile information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetProfileResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get user profile
      tags:
      - profile
  /profile/upsert:
    post:
      consumes:
      - application/json
      description: Create or update the user's profile
      parameters:
      - description: Profile information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpsertProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpsertProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Upsert user profile
      tags:
      - profile
  /progress:
    get:
      consumes:
      - application/json
      description: Get the user's progress for today
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TodayProgressResponse'
      summary: Get today's progress
      tags:
      - progress
  /progress/increment:
    get:
      consumes:
      - application/json
      description: Increment the number of questions completed for today
      parameters:
      - description: Amount to increment by
        in: query
        name: amount
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.IncrementProgressResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Increment questions completed
      tags:
      - progress
  /progress/streak:
    get:
      consumes:
      - application/json
      description: Get the user's current streak and completion status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.StreakResponse'
      summary: Get streak information
      tags:
      - progress
  /qna:
    post:
      consumes:
      - application/json
      description: Get an existing question or generate a new one for the given content
      parameters:
      - description: Question request parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.GetQuestionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetQuestionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get or generate a question
      tags:
      - qna
  /qna/evaluate:
    post:
      consumes:
      - application/json
      description: Evaluate a user's answer to a question
      parameters:
      - description: Answer evaluation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.EvaluateAnswerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.EvaluateAnswerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Evaluate an answer
      tags:
      - qna
  /story:
    get:
      consumes:
      - application/json
      description: Get story content by ID
      parameters:
      - description: Content ID
        in: query
        name: id
        required: true
        type: string
      - description: Page
        in: query
        name: page
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetStoryPageResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get story page content
      tags:
      - story
  /story/context:
    get:
      consumes:
      - application/json
      description: Get story QNA context by ID
      parameters:
      - description: Content ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetStoryQNAContextResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get story QNA context
      tags:
      - story
  /story/query:
    get:
      consumes:
      - application/json
      description: Get story query by ID
      parameters:
      - description: Language
        in: query
        name: language
        required: true
        type: string
      - description: CEFR
        in: query
        name: cefr
        required: true
        type: string
      - description: Subject
        in: query
        name: subject
        required: true
        type: string
      - description: Page
        in: query
        name: page
        required: true
        type: string
      - description: Page Size
        in: query
        name: pagesize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.StoryItem'
            type: array
      summary: Get story query
      tags:
      - story
  /student:
    get:
      consumes:
      - application/json
      description: Check if the user is a student and get their classroom info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.StudentStatusResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Check user student status
      tags:
      - student
  /student/classroom:
    get:
      consumes:
      - application/json
      description: Get classroom info for the student
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetStudentClassroomResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get classroom info
      tags:
      - student
  /student/classroom/join:
    post:
      consumes:
      - application/json
      description: Join a classroom as a student
      parameters:
      - description: Join classroom request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.JoinClassroomRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JoinClassroomResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Join classroom
      tags:
      - student
  /teacher:
    get:
      consumes:
      - application/json
      description: Check if the user is a teacher
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TeacherStatusResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Check user teacher status
      tags:
      - teacher
  /teacher/classroom:
    get:
      consumes:
      - application/json
      description: Get classrooms
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetClassroomListResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get classrooms
      tags:
      - teacher
  /teacher/classroom/accept:
    post:
      consumes:
      - application/json
      description: Accept content
      parameters:
      - description: Accept content request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.AcceptContentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AcceptContentResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Accept content
      tags:
      - teacher
  /teacher/classroom/content:
    get:
      consumes:
      - application/json
      description: Query classroom content
      parameters:
      - description: Language
        in: query
        name: language
        required: true
        type: string
      - description: CEFR
        in: query
        name: cefr
        required: true
        type: string
      - description: Subject
        in: query
        name: subject
        required: true
        type: string
      - description: Page
        in: query
        name: page
        required: true
        type: string
      - description: Page size
        in: query
        name: pagesize
        required: true
        type: string
      - description: Whitelist status
        in: query
        name: whitelist
        required: true
        type: string
      - description: Content type
        in: query
        name: content_type
        required: true
        type: string
      - description: Classroom ID
        in: query
        name: classroom_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ClassroomContentItem'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Query classroom content
      tags:
      - teacher
  /teacher/classroom/create:
    post:
      consumes:
      - application/json
      description: Create classroom
      parameters:
      - description: Create classroom request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateClassroomRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateClassroomResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create classroom
      tags:
      - teacher
  /teacher/classroom/delete:
    post:
      consumes:
      - application/json
      description: Delete classroom
      parameters:
      - description: Delete classroom request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.DeleteClassroomRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeleteClassroomResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete classroom
      tags:
      - teacher
  /teacher/classroom/reject:
    post:
      consumes:
      - application/json
      description: Accept content
      parameters:
      - description: Reject content request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RejectContentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RejectContentResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Accept content
      tags:
      - teacher
  /teacher/classroom/update:
    post:
      consumes:
      - application/json
      description: Update classroom
      parameters:
      - description: Update classroom request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateClassroomRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateClassroomResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update classroom
      tags:
      - teacher
  /webhook:
    post:
      consumes:
      - application/json
      description: Validates and processes incoming webhook events from Stripe
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.WebhookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Process Stripe webhook
      tags:
      - stripe
securityDefinitions:
  Bearer:
    description: JWT Authorization header using Bearer
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
